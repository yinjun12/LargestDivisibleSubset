vector<int> largestDivisibleSubset(vector<int>& nums) {
       vector<vector<int>>result(nums.size());//存储每一个满足条件的容器
       vector<int>ret;
       sort(nums.begin(),nums.end());//排序
       for(int i=0;i<nums.size();i++)
       {
           for(int j=0;j<i;j++)//把result中i的前面，元素个数最多且最后一个能被整除的容器赋给i
           {
               if(nums[i]%nums[j]==0&&result[j].size()>result[i].size())
               result[i]=result[j];
           }
           result[i].push_back(nums[i]);//nums每个元素都放在对应的result[i]中的最后一个
           if(result[i].size()>ret.size()) ret=result[i];//返回最大的
       }
       return ret;
    }
